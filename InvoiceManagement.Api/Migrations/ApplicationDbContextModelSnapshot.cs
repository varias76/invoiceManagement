// <auto-generated />
using System;
using InvoiceManagement.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceManagement.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("InvoiceManagement.Api.Models.CreditNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreditNoteNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceNumber");

                    b.ToTable("CreditNotes");
                });

            modelBuilder.Entity("InvoiceManagement.Api.Models.Invoice", b =>
                {
                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsConsistent")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PaymentDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("InvoiceNumber");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("InvoiceManagement.Api.Models.InvoiceProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceNumber");

                    b.ToTable("InvoiceProducts");
                });

            modelBuilder.Entity("InvoiceManagement.Api.Models.CreditNote", b =>
                {
                    b.HasOne("InvoiceManagement.Api.Models.Invoice", "Invoice")
                        .WithMany("CreditNotes")
                        .HasForeignKey("InvoiceNumber")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("InvoiceManagement.Api.Models.InvoiceProduct", b =>
                {
                    b.HasOne("InvoiceManagement.Api.Models.Invoice", "Invoice")
                        .WithMany("Products")
                        .HasForeignKey("InvoiceNumber")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("InvoiceManagement.Api.Models.Invoice", b =>
                {
                    b.Navigation("CreditNotes");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
